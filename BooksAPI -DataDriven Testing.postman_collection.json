{
	"info": {
		"_postman_id": "79cbb947-1b5d-4fe5-bc57-b31c02f98edb",
		"name": "BooksAPI -DataDriven Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26215211"
	},
	"item": [
		{
			"name": "Submit an Book order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.environment.set(\"orderid_env\",jsonData.orderId);\r",
							"\r",
							"console.log(jsonData.orderId);\r",
							"pm.test(\"validation of status code\",()=>{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"pm.test(\"validation of status code text\",()=>{\r",
							"  pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"bookId\":{{BookID}},\r\n    \"customerName\":\"{{CustomerName}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_books_collect}}/orders",
					"host": [
						"{{url_books_collect}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get orderid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"validation of orderid value from response body\",()=>{\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.id).to.eql(pm.environment.get(\"orderid_env\"));\r",
							"  console.log(jsonData.id);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_books_collect}}/orders/{{orderid_env}}",
					"host": [
						"{{url_books_collect}}"
					],
					"path": [
						"orders",
						"{{orderid_env}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.unset(\"orderid_env\");\r",
							"\r",
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"status text validation\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url_books_collect}}/orders/{{orderid_env}}",
					"host": [
						"{{url_books_collect}}"
					],
					"path": [
						"orders",
						"{{orderid_env}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "24963bf95688dc6258032d0fbd4119562279570b180ea548b55a773f148e803c",
			"type": "string"
		},
		{
			"key": "url_books_collect",
			"value": "https://simple-books-api.glitch.me",
			"type": "string"
		}
	]
}